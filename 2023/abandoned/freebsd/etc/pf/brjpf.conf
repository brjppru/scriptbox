#
# brj@packet filter config, http://brj.pp.ru/
# 

# ------------------------------------------------------------------------->
# Interfaces, IP and gates
# ------------------------------------------------------------------------->

ktel_ppp	= "rl0"
ktel		= "ng0"
mslocal		= "fxp0"
bashsi		= "gif0"
bashvz		= "gif1"

bash_ip		= "192.112.250.27"
ktel_gw		= "195.112.250.67"

sovintel_ip	= "80.255.151.110"
tronplus_ip	= "89.105.128.222"

table <tronppp>	  const { 10.10.170.89/32, 10.10.170.90/32 }

table <vpnaccess> const { 10.17.98.37/32, 10.17.98.38/32, 10.17.64.17/32, 10.17.64.18/32 }

table <sshaccess> const { 80.91.192.108/32, 62.33.185.65/32, 217.74.163.17/32, 217.22.55.50/32 }

table <rfc1918>   const { 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }

table <brjlocal>  const { 192.168.18.137/32, 192.168.19.5/32 }

table <badgays>

badports	= "{135,137,138,139,369,445,520,631,5000}"

# ------------------------------------------------------------------------->
# Public TCP/UDP services
# ------------------------------------------------------------------------->

tcp_svc		= "smtp domain www auth"
udp_svc		= "domain"

optel_srv	= "www cvsup auth"
tronplus_srv	= "smtp www auth"
sovintel_srv	= "smtp domain www auth"
sovintel_srv_u  = "domain"

# ------------------------------------------------------------------------->
# Mail server in DMZ
# ------------------------------------------------------------------------->

tcp_rdr		= "25"
host_rdr	= "192.168.18.3"

# ------------------------------------------------------------------------->
# normalize everything, max-mss is needed due to mpd's poor MSS handling
# ------------------------------------------------------------------------->

set optimization aggressive
set block-policy return

scrub in  on $ktel all max-mss 1440 fragment reassemble
scrub out on $ktel all max-mss 1440 fragment reassemble random-id

# ------------------------------------------------------------------------->
# NAT for brj
# ------------------------------------------------------------------------->

# nat lorr to transparent proxy
#rdr inet proto tcp from $lorr_ip   to any port 80 -> 127.0.0.1 port 3129
#rdr inet proto tcp from <brjlocal> to any port 80 -> 127.0.0.1 port 3129

# ------------------------------------------------------------------------->
# NAT for metallservis
# ------------------------------------------------------------------------->

# Транслировать внутренние адреса в (основной) адрес внешнего интерфейса.
#nat on $tronplus from !(self) -> ($tronplus:0)
#nat on $sovintel from !(self) -> ($sovintel:0)

# jmi to mysql for metall.informer.ru
#nat on $sovintel from 192.168.18.6 to 87.242.73.135 -> ($sovintel:0)
#nat on $tronplus from 192.168.18.6 to 87.242.73.135 -> ($tronplus:0)

#nat on $ktel from 192.168.20.2 to any -> ($ktel:0)

# Nat pay-server to rosbank VPN and everything
#nat on $sovintel from $pay to $payros -> ($sovintel:0)
#nat on $tronplus from $pay to $payros -> ($tronplus:0)

# Nat pay-server to trast and everything
#nat on $sovintel from $pay to $paytrast -> ($sovintel:0)
#nat on $tronplus from $pay to $paytrast -> ($tronplus:0)

# Nat pay-server to smtp, pop3 for vtb only
#nat on $sovintel from $pay to $payvtb port { 25,110 } -> ($sovintel:0)
#nat on $tronplus from $pay to $payvtb port { 25,110 } -> ($tronplus:0)

# Nat comm server to internet
#nat on $sovintel from $comm -> ($sovintel:0)
#nat on $tronplus from $comm -> ($tronplus:0)

# Redirect tcp services, from internal network
#rdr pass on $sovintel proto tcp from ($sovintel:network) to port { $sovintel_srv } -> $host_rdr
#rdr pass on $tronplus proto tcp from ($tronplus:network) to port { $tronplus_srv } -> $host_rdr

# Redirect mail server, from internal network
#rdr on $sovintel proto tcp to port { $tcp_rdr } tag sovintel -> $host_rdr
#rdr on $tronplus proto tcp to port { $tcp_rdr } tag tronplus -> $host_rdr

# ------------------------------------------------------------------------->
# and begin firewall
# ------------------------------------------------------------------------->

# pass pppoe on $ktel interface
pass on    $ktel_ppp proto gre from any to any
pass in on $ktel_ppp inet proto tcp from any to any port 1723 flags S/SA keep state

# ipsec bash - ESP bash_ip <> sovintel
pass in  on $ktel inet proto esp from $sovintel_ip to $bash_ip
pass out on $ktel inet proto esp from $bash_ip     to $sovintel_ip

# ipsec bash - ESP bash_ip <> tronplus
pass in  on $ktel inet proto esp from $tronplus_ip to $bash_ip
pass out on $ktel inet proto esp from $bash_ip     to $tronplus_ip

# nsb autocad hard block
block drop quick on $ktel from 192.168.20.3 to any


# skip lo0 and $mslocal
set  skip on { lo0 $mslocal $bashsi $bashvz }
pass quick on { lo0 $mslocal $bashsi $bashvz }

# Antispoof
antispoof quick for { lo0 $mslocal $bashsi $bashvz }

# Block fake network on upstream
block drop in  quick log on $ktel from <rfc1918> to any
block drop out quick log on $ktel from any to <rfc1918>

# Block badports
block in quick on $ktel proto {udp, tcp} from any to any port $badports

# Block nmap's fingerprinting attempt(FIN, URG, PSH)
block in quick on $ktel    inet proto tcp from any to any flags FUP/FUP

# OS detection, yummy ;-)
block drop in quick on $ktel from any os nmap

# ------------------------------------------------------------------------->
# Localpass and antispoof + other block's
# ------------------------------------------------------------------------->

# По умолчанию блокировать входящий трафик на внешних интерфейсах.
# Для TCP соединений возвращать RST.
#
#block all

block in on { $ktel }
block return-rst in on { $ktel } proto tcp

# GRE for work vpn - home, bja, brj, lotaplus, bja
#pass in  on $optel inet proto gre from <vpnaccess> to $optel_gw
#pass out on $optel inet proto gre from $optel_gw to <vpnaccess>

# Направить исходящие пакеты в канал, соответствующий адресу источника.
pass out route-to ($ktel $ktel_gw) from ($ktel) to !(self:network) keep state

# Установить маршрут для ответа на входящие пакеты для переадресованных
# TCP сервисов.
#
pass in reply-to ($ktel $ktel_gw) proto tcp flags S/SA tagged ktel keep state

# ------------------------------------------------------------------------->
# ICMP, TCP&UDP services on multihomed
# ------------------------------------------------------------------------->

# sovintel
pass in on $ktel reply-to ($ktel $ktel_gw) inet proto icmp icmp-type echoreq code 0 keep state
pass in on $ktel inet proto icmp from ($ktel:network) icmp-type echoreq code 0 keep state
#pass in on $ktel reply-to ($ktel $ktel_gw) proto tcp to port { $ktel_srv } flags S/SA keep state
#pass in on $ktel proto tcp from ($ktel:network) to port { $ktel_srv } flags S/SA keep state

#pass in on $ktel reply-to ($ktel $ktel_gw) proto tcp to port ssh flags S/SA keep state
#pass in on $ktel proto tcp from <sshaccess> to port ssh flags S/SA keep state (max-src-conn 5, max-src-conn-rate 5/60, overload <badgays> flush)

pass in on $ktel inet proto tcp from 82.146.60.244  to 195.112.250.27 port 22   tag ktel flags S/SA keep state

# Dumb pass baza VPN on ktel 
#pass in on $ktel inet proto tcp from $baza_ip to $ktel_ip port 1723 flags S/SA keep state

# ------------------------------------------------------------------------->
# The end
# ------------------------------------------------------------------------->
